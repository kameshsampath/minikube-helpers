apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: helloworld-from-git-source
spec:
  inputs:
    resources:
      - name: git-source
        type: git
    params:
      - name: pathToDockerFile
        description: The path to the dockerfile to build
        default: /workspace/git-source/registry/example/helloworld/Dockerfile
      - name: pathToContext
        description: >-
          The build context used by Kaniko
          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
        default: /workspace/git-source/registry/example/helloworld
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:v0.9.0
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/builder/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --insecure
        - --dockerfile=${inputs.params.pathToDockerFile}
        - --destination=${outputs.resources.builtImage.url}
        - --context=${inputs.params.pathToContext}
    - name: update-image
      image: quay.io/rhdevelopers/tutorial-tools:0.0.3
      command:
        - yq
      args:
        - "w"
        - "-i"
        - "-d*"
        - "./deployment.yaml"
        - "spec.template.spec.containers[0].image"
        - "${outputs.resources.builtImage.url}"
      workingDir: /workspace/git-source/registry/example
    - name: deploy-app
      image: quay.io/rhdevelopers/tutorial-tools:0.0.3
      command:
        - kubectl
      args:
        - "apply"
        - "--filename=./deployment.yaml"
        - "--filename=./service.yaml"
      workingDir: /workspace/git-source/registry/example
---
apiVersion: tekton.dev/v1alpha1
kind: TaskRun
metadata:
  name: hello-world
spec:
  serviceAccount: build-robot
  taskRef:
    name: helloworld-from-git-source
  inputs:
    resources:
    - name: git-source
      resourceRef:
        name: hello-git-source
  outputs:
    resources:
      - name: builtImage
        resourceRef:
          name: helloworld-image